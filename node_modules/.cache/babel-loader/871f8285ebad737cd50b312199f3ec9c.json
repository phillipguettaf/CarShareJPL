{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _inherits = _interopRequireDefault(require(\"inherits\"));\n\nvar _columncompiler = _interopRequireDefault(require(\"../../../schema/columncompiler\"));\n\nvar _lodash = require(\"lodash\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // MySQL Column Compiler\n// -------\n\n\nfunction ColumnCompiler_MySQL() {\n  _columncompiler.default.apply(this, arguments);\n\n  this.modifiers = ['unsigned', 'nullable', 'defaultTo', 'comment', 'collate', 'first', 'after'];\n}\n\n(0, _inherits.default)(ColumnCompiler_MySQL, _columncompiler.default); // Types\n// ------\n\nObject.assign(ColumnCompiler_MySQL.prototype, {\n  increments: 'int unsigned not null auto_increment primary key',\n  bigincrements: 'bigint unsigned not null auto_increment primary key',\n  bigint: 'bigint',\n  double: function double(precision, scale) {\n    if (!precision) return 'double';\n    return \"double(\".concat(this._num(precision, 8), \", \").concat(this._num(scale, 2), \")\");\n  },\n  integer: function integer(length) {\n    length = length ? \"(\".concat(this._num(length, 11), \")\") : '';\n    return \"int\".concat(length);\n  },\n  mediumint: 'mediumint',\n  smallint: 'smallint',\n  tinyint: function tinyint(length) {\n    length = length ? \"(\".concat(this._num(length, 1), \")\") : '';\n    return \"tinyint\".concat(length);\n  },\n  text: function text(column) {\n    switch (column) {\n      case 'medium':\n      case 'mediumtext':\n        return 'mediumtext';\n\n      case 'long':\n      case 'longtext':\n        return 'longtext';\n\n      default:\n        return 'text';\n    }\n  },\n  mediumtext: function mediumtext() {\n    return this.text('medium');\n  },\n  longtext: function longtext() {\n    return this.text('long');\n  },\n  enu: function enu(allowed) {\n    return \"enum('\".concat(allowed.join(\"', '\"), \"')\");\n  },\n  datetime: function datetime(precision) {\n    if ((0, _lodash.isObject)(precision)) {\n      var _precision = precision;\n      precision = _precision.precision;\n    }\n\n    return typeof precision === 'number' ? \"datetime(\".concat(precision, \")\") : 'datetime';\n  },\n  timestamp: function timestamp(precision) {\n    if ((0, _lodash.isObject)(precision)) {\n      var _precision2 = precision;\n      precision = _precision2.precision;\n    }\n\n    return typeof precision === 'number' ? \"timestamp(\".concat(precision, \")\") : 'timestamp';\n  },\n  time: function time(precision) {\n    if ((0, _lodash.isObject)(precision)) {\n      var _precision3 = precision;\n      precision = _precision3.precision;\n    }\n\n    return typeof precision === 'number' ? \"time(\".concat(precision, \")\") : 'time';\n  },\n  bit: function bit(length) {\n    return length ? \"bit(\".concat(this._num(length), \")\") : 'bit';\n  },\n  binary: function binary(length) {\n    return length ? \"varbinary(\".concat(this._num(length), \")\") : 'blob';\n  },\n  json: function json() {\n    return 'json';\n  },\n  // Modifiers\n  // ------\n  defaultTo: function defaultTo(value) {\n    var defaultVal = ColumnCompiler_MySQL.super_.prototype.defaultTo.apply(this, arguments);\n\n    if (this.type !== 'blob' && this.type.indexOf('text') === -1) {\n      return defaultVal;\n    }\n\n    return '';\n  },\n  unsigned: function unsigned() {\n    return 'unsigned';\n  },\n  comment: function comment(_comment) {\n    if (_comment && _comment.length > 255) {\n      this.client.logger.warn('Your comment is longer than the max comment length for MySQL');\n    }\n\n    return _comment && \"comment '\".concat(_comment, \"'\");\n  },\n  first: function first() {\n    return 'first';\n  },\n  after: function after(column) {\n    return \"after \".concat(this.formatter.wrap(column));\n  },\n  collate: function collate(collation) {\n    return collation && \"collate '\".concat(collation, \"'\");\n  }\n});\nvar _default = ColumnCompiler_MySQL;\nexports.default = _default;\nmodule.exports = exports.default;","map":null,"metadata":{},"sourceType":"script"}