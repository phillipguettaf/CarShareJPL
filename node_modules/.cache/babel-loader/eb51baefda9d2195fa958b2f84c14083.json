{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _inherits = _interopRequireDefault(require(\"inherits\"));\n\nvar _compiler = _interopRequireDefault(require(\"../../../schema/compiler\"));\n\nvar _lodash = require(\"lodash\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // SQLite3: Column Builder & Compiler\n// -------\n// Schema Compiler\n// -------\n\n\nfunction SchemaCompiler_SQLite3() {\n  _compiler.default.apply(this, arguments);\n}\n\n(0, _inherits.default)(SchemaCompiler_SQLite3, _compiler.default); // Compile the query to determine if a table exists.\n\nSchemaCompiler_SQLite3.prototype.hasTable = function (tableName) {\n  var sql = \"select * from sqlite_master \" + \"where type = 'table' and name = \".concat(this.formatter.parameter(tableName));\n  this.pushQuery({\n    sql: sql,\n    output: function output(resp) {\n      return resp.length > 0;\n    }\n  });\n}; // Compile the query to determine if a column exists.\n\n\nSchemaCompiler_SQLite3.prototype.hasColumn = function (tableName, column) {\n  this.pushQuery({\n    sql: \"PRAGMA table_info(\".concat(this.formatter.wrap(tableName), \")\"),\n    output: function output(resp) {\n      return (0, _lodash.some)(resp, {\n        name: column\n      });\n    }\n  });\n}; // Compile a rename table command.\n\n\nSchemaCompiler_SQLite3.prototype.renameTable = function (from, to) {\n  this.pushQuery(\"alter table \".concat(this.formatter.wrap(from), \" rename to \").concat(this.formatter.wrap(to)));\n};\n\nvar _default = SchemaCompiler_SQLite3;\nexports.default = _default;\nmodule.exports = exports.default;","map":null,"metadata":{},"sourceType":"script"}