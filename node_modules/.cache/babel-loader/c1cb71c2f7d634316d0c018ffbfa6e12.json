{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/phill/Documents/RMIT/2019Sem1/COSC2408/JPLCarShare/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/phill/Documents/RMIT/2019Sem1/COSC2408/JPLCarShare/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/phill/Documents/RMIT/2019Sem1/COSC2408/JPLCarShare/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/phill/Documents/RMIT/2019Sem1/COSC2408/JPLCarShare/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/Users/phill/Documents/RMIT/2019Sem1/COSC2408/JPLCarShare/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/Users/phill/Documents/RMIT/2019Sem1/COSC2408/JPLCarShare/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _formatter = _interopRequireDefault(require(\"../../formatter\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Oracle_Formatter =\n/*#__PURE__*/\nfunction (_formatter$default) {\n  _inherits(Oracle_Formatter, _formatter$default);\n\n  function Oracle_Formatter() {\n    _classCallCheck(this, Oracle_Formatter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Oracle_Formatter).apply(this, arguments));\n  }\n\n  _createClass(Oracle_Formatter, [{\n    key: \"alias\",\n    value: function alias(first, second) {\n      return first + ' ' + second;\n    }\n  }, {\n    key: \"parameter\",\n    value: function parameter(value, notSetValue) {\n      // Returning helper uses always ROWID as string\n      if (value instanceof _utils.ReturningHelper && this.client.driver) {\n        value = new this.client.driver.OutParam(this.client.driver.OCCISTRING);\n      } else if (typeof value === 'boolean') {\n        value = value ? 1 : 0;\n      }\n\n      return _get(_getPrototypeOf(Oracle_Formatter.prototype), \"parameter\", this).call(this, value, notSetValue);\n    }\n  }]);\n\n  return Oracle_Formatter;\n}(_formatter.default);\n\nexports.default = Oracle_Formatter;\nmodule.exports = exports.default;","map":null,"metadata":{},"sourceType":"script"}